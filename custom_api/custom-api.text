-------------------------
WordPress Rest API
I. Basic setup
   1. Permalink structure setup
   2. Add Json Formatter Extension

II. Creating Plugin
=========================
I. Basic setup:
=========================
1. Permalink structure setup
-------------------------
For Rest API testing make sure to select
"Permalink structure" to "Post name"
steps:
Dashboard > settings > Permalink structure > Post name

And then check:
Project-url/wp-json/wp/v2/posts
Example:
http://localhost/wp-headless/server/wp-json/wp/v2/posts

-------------------------
2. Add Json Formatter Extension
-------------------------
Add Json Formatter Extension on your browser via given link
https://chromewebstore.google.com/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa


=========================
II. Creating Plugin
=========================
Now we are going to create a basic plugin for our
Custom Rest API.

Steps:
1. create a folder with you plugin name "capi_posts"

2.inside the folder keep a file with same folder name called "capi_posts.php"
it should be the same name and becomes the root file.

3. Basic details of the plugin 
form_data.php
-------------------------------
<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/
?>

-------------------------------
4. Now we initialize our Rest API
-------------------------------

<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/

add_action('rest_api_init', 'custom_api');

function custom_api(){
   register_rest_route('capi/v1', 'posts', [
      'methods' => 'GET',
      'callback' => 'capi_posts',
   ]);
};

function capi_posts(){
   return "Our Custom API";
};

?>

-------------------------------
Note:
> Now visit plugin section from dashboard and
  active the plugin with name "Custom API"

> Next visit the link to get our generated custom api
  Project-URL/wp-json/capi/v1/posts

-------------------------------
5. Now update capi_posts() 
   functon to get posts list

   ** we can also use WP_Query() in place of get_posts()
      to get more options.
-------------------------------
<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/

add_action('rest_api_init', 'custom_api');

function custom_api(){
   register_rest_route('capi/v1', 'posts', [
      'methods' => 'GET',
      'callback' => 'capi_posts',
   ]);
};

function capi_posts(){
   $args = [
      'numberposts' => 9999,
      'post_type' => 'post' //page, custom post like products...
   ];
   $posts = get_posts($args);
   $data = [];
   $i = 0;
   foreach($posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['content'] = $post->post_content;
      $data[$i]['slug'] = $post->post_name;
      $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post->ID, 'thumbnail');
      $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post->ID, 'medium');
      $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post->ID, 'large');
      $i++;
   }
   return $data;
};

?>

-------------------------------
Now check the for Custom Rest API
Project-URL/wp-json/capi/v1/posts
-------------------------------
6. Now get each post using there 'slug' name.
   To do it custom_api() function and create new 
   functon called capi_post($slug)
-------------------------------
<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/

add_action('rest_api_init', 'custom_api');

function custom_api(){
   register_rest_route('capi/v1', 'posts', [
      'methods' => 'GET',
      'callback' => 'capi_posts',
   ]);
   register_rest_route('capi/v1', 'posts/(?P<slug>[a-zA-Z0-9-]+)', array(
      'methods' => 'GET',
      'callback' => 'capi_post',
   ));
};

function capi_posts(){
   $args = [
      'numberposts' => 9999,
      'post_type' => 'post' //page, custom post like products...
   ];
   $posts = get_posts($args);
   $data = [];
   $i = 0;
   foreach($posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['content'] = $post->post_content;
      $data[$i]['slug'] = $post->post_name;
      $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post->ID, 'thumbnail');
      $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post->ID, 'medium');
      $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post->ID, 'large');
      $i++;
   }
   return $data;
};

function capi_post($slug){
   $args = [
      'name' => $slug['slug'],
      'post_type' => 'post' //page, custom post like products...
   ];
   $post = get_posts($args);
   //get_field("name_of_the_field", $post[0]->ID); //For CUSTOM POST
   $data[$i]['id'] = $post[0]->ID;
   $data[$i]['title'] = $post[0]->post_title;
   $data[$i]['content'] = $post[0]->post_content;
   $data[$i]['slug'] = $post[0]->post_name;
   $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post[0]->ID, 'thumbnail');
   $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post[0]->ID, 'medium');
   $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post[0]->ID, 'large');
   return $data;
}
?>

-------------------------------
Now check single post using post slug
Project-URL/wp-json/capi/v1/posts/hello-world
-------------------------------
7. Now we create custom Rest API to get 
   Custom Post and custom fileds(CFS).

  >To do it we update custom_api() comment //Register for Custom Post
   and create a function called capi_products()

  >'products' is the slug of the custom post
-------------------------------
<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/

add_action('rest_api_init', 'custom_api');

function custom_api(){
   register_rest_route('capi/v1', 'posts', [
      'methods' => 'GET',
      'callback' => 'capi_posts',
   ]);
   register_rest_route('capi/v1', 'posts/(?P<slug>[a-zA-Z0-9-]+)', array(
      'methods' => 'GET',
      'callback' => 'capi_post',
   ));

   //Register for Custom Post
   register_rest_route('capi/v1', 'products', [
      'methods' => 'GET',
      'callback' => 'capi_products',
   ]);
};

// post list
function capi_posts(){
   $args = [
      'numberposts' => 9999,
      'post_type' => 'post' //page, custom post like products...
   ];
   $posts = get_posts($args);
   $data = [];
   $i = 0;
   foreach($posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['content'] = $post->post_content;
      $data[$i]['slug'] = $post->post_name;
      $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post->ID, 'thumbnail');
      $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post->ID, 'medium');
      $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post->ID, 'large');
      $i++;
   }
   return $data;
};

//single post with slug
function capi_post($slug){
   $args = [
      'name' => $slug['slug'],
      'post_type' => 'post' //page, custom post like products...
   ];
   $post = get_posts($args);
   //get_field("name_of_the_field", $post[0]->ID); //For CUSTOM POST
   $data[$i]['id'] = $post[0]->ID;
   $data[$i]['title'] = $post[0]->post_title;
   $data[$i]['content'] = $post[0]->post_content;
   $data[$i]['slug'] = $post[0]->post_name;
   $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post[0]->ID, 'thumbnail');
   $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post[0]->ID, 'medium');
   $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post[0]->ID, 'large');
   return $data;
}

//custom post list (with CFS)
function capi_products(){
   $args = [
      'numberposts' => 9999,
      'post_type' => 'products' //page, custom post like products...
   ];
   $posts = get_posts($args);
   $data = [];
   $i = 0;
   foreach($posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['price'] = CFS()->get('product_price',  $post->ID);
      $data[$i]['description'] = CFS()->get('product_description',  $post->ID);
      $i++;
   }
   return $data;
};
?>

-------------------------------
Now check products list using this API
Project-URL/wp-json/capi/v1/products

-------------------------------
8. Now we are gooing to filter the products based on 
   given price range.

  > We update capi_products() functon 
-------------------------------

//custom post list (with CFS)
function capi_products($params){
   $price = json_decode($params->get_param('product_price')); //CFS Field name
   //return $price;
   function queryArgument($param, $key) {
        if(is_object($param)) {
            if($param->lt && $param->gt) {
                return [
                    [
                        'key' => $key,
                        'value' => [$param->gt, $param->lt],
                        'type'  => 'NUMERIC',
                        'compare' => 'BETWEEN'
                    ]
                ];
            }

            if($param->lt) {
                return [
                    [
                        'key' => $key,
                        'value' => $param->lt,
                        'type'  => 'NUMERIC',
                        'compare' => '<'
                    ]
                ];
            }

            if($param->gt) {
                return [
                    [
                        'key' => $key,
                        'value' => $param->gt,
                        'type'  => 'NUMERIC',
                        'compare' => '>'
                    ]
                ];
            }
        }


        if($param) {
            return [
                [
                    'key' => $key,
                    'value' => $param,
                    'type'  => 'NUMERIC'
                ]
            ];
        }

        return null;
    }


   $args = [
      'posts_per_page' => 9999,
      'post_type' => 'products',
      'meta_query' =>  queryArgument($price, 'product_price')
   ];
   $posts = new WP_Query($args);

   $data = [];
   $i = 0;
   foreach($posts->posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['price'] = intval(CFS()->get('product_price',  $post->ID));
      $data[$i]['description'] = CFS()->get('product_description',  $post->ID);
      $i++;
   }
   return $data;
};


-------------------------------
Full Code
-------------------------------
<?php 
/*
Plugin Name: Custom API
Plugin URI: 
Description: Custom API Plugin
Author: Santanu Chowdhury
Author URI: santanuchowdhury04@gmail.com
Version: 1.0
*/

add_action('rest_api_init', 'custom_api');

function custom_api(){
   register_rest_route('capi/v1', 'posts', [
      'methods' => 'GET',
      'callback' => 'capi_posts',
   ]);
   register_rest_route('capi/v1', 'posts/(?P<slug>[a-zA-Z0-9-]+)', array(
      'methods' => 'GET',
      'callback' => 'capi_post',
   ));

   //Register for Custom Post
   register_rest_route('capi/v1', 'products', [
      'methods' => 'GET',
      'callback' => 'capi_products',
   ]);
};

// post list
function capi_posts(){
   $args = [
      'numberposts' => 9999,
      'post_type' => 'post' //page, custom post like products...
   ];
   $posts = get_posts($args);
   $data = [];
   $i = 0;
   foreach($posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['content'] = $post->post_content;
      $data[$i]['slug'] = $post->post_name;
      $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post->ID, 'thumbnail');
      $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post->ID, 'medium');
      $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post->ID, 'large');
      $i++;
   }
   return $data;
};

//single post with slug
function capi_post($slug){
   $args = [
      'name' => $slug['slug'],
      'post_type' => 'post' //page, custom post like products...
   ];
   $post = get_posts($args);
   //get_field("name_of_the_field", $post[0]->ID); //For CUSTOM POST
   $data[$i]['id'] = $post[0]->ID;
   $data[$i]['title'] = $post[0]->post_title;
   $data[$i]['content'] = $post[0]->post_content;
   $data[$i]['slug'] = $post[0]->post_name;
   $data[$i]['featured_image']['thumbnail'] = get_the_post_thumbnail_url($post[0]->ID, 'thumbnail');
   $data[$i]['featured_image']['medium'] = get_the_post_thumbnail_url($post[0]->ID, 'medium');
   $data[$i]['featured_image']['large'] = get_the_post_thumbnail_url($post[0]->ID, 'large');
   return $data;
}

//custom post list (with CFS)
function capi_products($params){
   $price = json_decode($params->get_param('product_price')); //CFS Field name
   //return $price;
   function queryArgument($param, $key) {
        if(is_object($param)) {
            if($param->lt && $param->gt) {
                return [
                    [
                        'key' => $key,
                        'value' => [$param->gt, $param->lt],
                        'type'  => 'NUMERIC',
                        'compare' => 'BETWEEN'
                    ]
                ];
            }

            if($param->lt) {
                return [
                    [
                        'key' => $key,
                        'value' => $param->lt,
                        'type'  => 'NUMERIC',
                        'compare' => '<'
                    ]
                ];
            }

            if($param->gt) {
                return [
                    [
                        'key' => $key,
                        'value' => $param->gt,
                        'type'  => 'NUMERIC',
                        'compare' => '>'
                    ]
                ];
            }
        }


        if($param) {
            return [
                [
                    'key' => $key,
                    'value' => $param,
                    'type'  => 'NUMERIC'
                ]
            ];
        }

        return null;
    }


   $args = [
      'posts_per_page' => 9999,
      'post_type' => 'products',
      'meta_query' =>  queryArgument($price, 'product_price')
   ];
   $posts = new WP_Query($args);

   $data = [];
   $i = 0;
   foreach($posts->posts as $post){
      $data[$i]['id'] = $post->ID;
      $data[$i]['title'] = $post->post_title;
      $data[$i]['price'] = intval(CFS()->get('product_price',  $post->ID));
      $data[$i]['description'] = CFS()->get('product_description',  $post->ID);
      $i++;
   }
   return $data;
};
?>